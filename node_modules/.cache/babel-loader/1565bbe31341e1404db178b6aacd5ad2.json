{"ast":null,"code":"var _jsxFileName = \"/Users/rishinopany/Georgia Tech/projects/hackgt8/hackgt8/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(0);\n  const [albums, setAlbums] = useState(undefined);\n  const [artists, setArtists] = useState(undefined);\n  const [tracks, setTracks] = useState(undefined);\n  const [search, setSearch] = useState(\"\");\n  const [formVal, setformVal] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n  const token = \"BQA5xcrOY2j885VARqFrg6T_huKS48vUkx-lYsazLGEqCIDizgn8mKWgWZzQcFx86cDvedK-pdGlfVoEGFetpGxNyE_RH7vJQrubZZRpFnESdJDLfM_1SBlizPeOdSjjLFZq0nhZchusyAIwFEWOMjNn3tp9MI-X-X0\";\n\n  const HandleResponse = e => {\n    e.preventDefault();\n    setSearch(formVal);\n    setformVal(\"\");\n  };\n\n  async function fetchData() {\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${search}&type=album,track,artist`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      let info = await response.json();\n      return await info;\n    } catch (e) {\n      console.log(\"error\");\n    }\n  }\n\n  useEffect(() => {\n    fetchData().then(info => {\n      if (info.albums !== undefined && info.artists !== undefined && info.tracks !== undefined) {\n        setData(info);\n        setAlbums(info.albums.items.slice(0, 5));\n\n        for (i = 0; i < albums.length; i++) {\n          let newList = [];\n\n          if (albums[i] == \"album\") {\n            newList.push(albums[i]);\n          }\n        }\n\n        setAlbums(newList);\n        setArtists(info.artists.items.slice(0, 5));\n        setTracks(info.tracks.items.slice(0, 5));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [search]);\n  console.log(albums);\n  let albumDisplay = undefined;\n  let artistDisplay = undefined;\n  let trackDisplay = undefined;\n\n  if (albums !== undefined && artists !== undefined && tracks !== undefined) {\n    // display albums\n    albumDisplay = albums.map((album, index) =>\n    /*#__PURE__*/\n    // if (album.album_type == \"album\") {\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: album.external_urls.spotify,\n        children: album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: index,\n        onClick: () => AddtoList(album, index),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) // }\n    ); // display artists\n    // artistDisplay = artists.map((artist, index) => (\n    //   <div key={index}>\n    //     <a href={artist.external_urls.spotify}>{artist.name}</a>\n    //     <button onClick={() => AddtoList(artist)}>+</button>\n    //   </div>\n    // ));\n    // display tracks\n    // trackDisplay = tracks.map((track, index) => (\n    //   <div key={index}>\n    //     <a href={track.external_urls.spotify}>{track.name}</a>\n    //     <button onClick={() => AddtoList(track)}>+</button>\n    //   </div>\n    // ));\n  }\n\n  const AddtoList = (value, index) => {\n    setUserList(userList => [...userList, value]);\n    document.getElementById(index).style.display = \"none\";\n  };\n\n  useEffect(() => {\n    console.log(userList);\n  }, [userList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => HandleResponse(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formVal,\n          onChange: e => {\n            setformVal(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"results\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"result\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), albumDisplay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.external_urls.spotify,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c+Ptc/K8x5wDdrqdikGj9m6K+oU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rishinopany/Georgia Tech/projects/hackgt8/hackgt8/src/App.js"],"names":["useEffect","useState","App","data","setData","albums","setAlbums","undefined","artists","setArtists","tracks","setTracks","search","setSearch","formVal","setformVal","userList","setUserList","token","HandleResponse","e","preventDefault","fetchData","response","fetch","headers","Authorization","info","json","console","log","then","items","slice","i","length","newList","push","catch","err","albumDisplay","artistDisplay","trackDisplay","map","album","index","external_urls","spotify","name","AddtoList","value","document","getElementById","style","display","target","item"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [data, setData] = useState(0);\n  const [albums, setAlbums] = useState(undefined);\n  const [artists, setArtists] = useState(undefined);\n  const [tracks, setTracks] = useState(undefined);\n  const [search, setSearch] = useState(\"\");\n  const [formVal, setformVal] = useState(\"\");\n  const [userList, setUserList] = useState([]);\n  const token =\n    \"BQA5xcrOY2j885VARqFrg6T_huKS48vUkx-lYsazLGEqCIDizgn8mKWgWZzQcFx86cDvedK-pdGlfVoEGFetpGxNyE_RH7vJQrubZZRpFnESdJDLfM_1SBlizPeOdSjjLFZq0nhZchusyAIwFEWOMjNn3tp9MI-X-X0\";\n  const HandleResponse = (e) => {\n    e.preventDefault();\n    setSearch(formVal);\n    setformVal(\"\");\n  };\n  async function fetchData() {\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${search}&type=album,track,artist`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      let info = await response.json();\n      return await info;\n    } catch (e) {\n      console.log(\"error\");\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n      .then((info) => {\n        if (\n          info.albums !== undefined &&\n          info.artists !== undefined &&\n          info.tracks !== undefined\n        ) {\n          setData(info);\n          setAlbums(info.albums.items.slice(0, 5));\n          for (i = 0; i < albums.length; i++) {\n            let newList = [];\n            if (albums[i] == \"album\") {\n              newList.push(albums[i]);\n            }\n          }\n          setAlbums(newList);\n          setArtists(info.artists.items.slice(0, 5));\n          setTracks(info.tracks.items.slice(0, 5));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [search]);\n  console.log(albums);\n  let albumDisplay = undefined;\n  let artistDisplay = undefined;\n  let trackDisplay = undefined;\n\n  if (albums !== undefined && artists !== undefined && tracks !== undefined) {\n    // display albums\n    albumDisplay = albums.map((album, index) => (\n      // if (album.album_type == \"album\") {\n      <div key={index}>\n        <a href={album.external_urls.spotify}>{album.name}</a>\n        <button id={index} onClick={() => AddtoList(album, index)}>\n          +\n        </button>\n      </div>\n      // }\n    ));\n    // display artists\n    // artistDisplay = artists.map((artist, index) => (\n    //   <div key={index}>\n    //     <a href={artist.external_urls.spotify}>{artist.name}</a>\n    //     <button onClick={() => AddtoList(artist)}>+</button>\n    //   </div>\n    // ));\n    // display tracks\n    // trackDisplay = tracks.map((track, index) => (\n    //   <div key={index}>\n    //     <a href={track.external_urls.spotify}>{track.name}</a>\n    //     <button onClick={() => AddtoList(track)}>+</button>\n    //   </div>\n    // ));\n  }\n\n  const AddtoList = (value, index) => {\n    setUserList((userList) => [...userList, value]);\n    document.getElementById(index).style.display = \"none\";\n  };\n\n  useEffect(() => {\n    console.log(userList);\n  }, [userList]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Search</h1>\n        <form onSubmit={(e) => HandleResponse(e)}>\n          <input\n            type=\"text\"\n            value={formVal}\n            onChange={(e) => {\n              setformVal(e.target.value);\n            }}\n          ></input>\n          <br />\n          <button>Submit</button>\n        </form>\n      </div>\n      <div>\n        <div class=\"results\">\n          <div class=\"result\">\n            <h1>Albums</h1>\n            {albumDisplay}\n          </div>\n          {/* <div class=\"result\">\n            <h1>Artists</h1>\n            {artistDisplay}\n          </div>\n          <div class=\"result\">\n            <h1>Tracks</h1>\n            {trackDisplay}\n          </div> */}\n        </div>\n      </div>\n      <h1>My List</h1>\n      <div>\n        {userList.map((item, index) => (\n          <div>\n            <a key={index} href={item.external_urls.spotify}>\n              {item.name}\n            </a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}